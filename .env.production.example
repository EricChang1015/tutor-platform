# 🚀 生產環境配置範例
# 複製此文件為 .env.production 並填入實際值

# ==========================================
# 🔐 安全配置 - 必須更改所有預設值！
# ==========================================

# 數據庫配置
DB_USER=produser
DB_PASSWORD=your_very_secure_database_password_here_min_16_chars
DB_NAME=tutorplatform_prod

# Redis 配置
REDIS_PASSWORD=your_very_secure_redis_password_here_min_16_chars

# JWT 密鑰 - 使用強隨機字符串，至少 32 字符
JWT_SECRET=your_very_long_and_secure_jwt_secret_key_here_at_least_32_characters

# MinIO 配置
MINIO_ROOT_USER=minioadmin
MINIO_ROOT_PASSWORD=your_very_secure_minio_password_here_min_16_chars

# 管理員種子帳號
ADMIN_SEED_EMAIL=admin@yourdomain.com
ADMIN_SEED_PASSWORD=your_very_secure_admin_password_here_min_12_chars

# ==========================================
# 📧 郵件服務配置
# ==========================================

# SMTP 服務器配置（使用真實 SMTP 服務）
SMTP_HOST=smtp.yourmailprovider.com
SMTP_PORT=587
SMTP_USER=your_smtp_username
SMTP_PASSWORD=your_smtp_password
SMTP_SECURE=true

# 發件人信息
FROM_EMAIL=noreply@yourdomain.com
FROM_NAME=Your Tutor Platform

# ==========================================
# 🌐 應用配置
# ==========================================

# API URL（前端使用）
API_URL=https://yourdomain.com/api

# 域名配置
DOMAIN=yourdomain.com

# ==========================================
# 📊 監控配置（可選）
# ==========================================

# Grafana 管理員密碼
GRAFANA_PASSWORD=your_secure_grafana_password_here

# ==========================================
# 🔧 高級配置
# ==========================================

# 數據庫連接池配置
DB_POOL_MIN=5
DB_POOL_MAX=20

# Redis 連接配置
REDIS_MAX_RETRIES=3
REDIS_RETRY_DELAY=1000

# 檔案上傳限制
MAX_FILE_SIZE=10485760  # 10MB
ALLOWED_FILE_TYPES=image/jpeg,image/png,image/gif,application/pdf

# Rate Limiting
RATE_LIMIT_WINDOW=900000  # 15 minutes
RATE_LIMIT_MAX=100        # requests per window

# Session 配置
SESSION_TIMEOUT=86400000  # 24 hours

# ==========================================
# 🚨 安全提醒
# ==========================================

# 1. 所有密碼必須至少 12 字符，包含大小寫字母、數字和特殊字符
# 2. JWT_SECRET 必須至少 32 字符的隨機字符串
# 3. 不要在版本控制中提交實際的 .env.production 文件
# 4. 定期輪換所有密鑰和密碼
# 5. 使用環境變數管理工具（如 Docker Secrets）來管理敏感信息

# ==========================================
# 📝 生成安全密碼的方法
# ==========================================

# 使用 openssl 生成隨機密碼：
# openssl rand -base64 32

# 使用 Node.js 生成 JWT 密鑰：
# node -e "console.log(require('crypto').randomBytes(64).toString('hex'))"

# 使用 Python 生成隨機密碼：
# python3 -c "import secrets; print(secrets.token_urlsafe(32))"
