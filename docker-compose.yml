version: '3.8'

services:
  # PostgreSQL 資料庫
  db:
    image: postgres:15-alpine
    container_name: tutor-db
    ports:
      - "15432:5432"
    environment:
      POSTGRES_USER: tutor
      POSTGRES_PASSWORD: tutor123
      POSTGRES_DB: tutordb
      POSTGRES_INITDB_ARGS: "--encoding=UTF8 --locale=C"
    volumes:
      - ./data/postgres:/var/lib/postgresql/data
      - ./database/create_db.sql:/docker-entrypoint-initdb.d/01-create_db.sql
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U tutor -d tutordb"]
      interval: 10s
      timeout: 5s
      retries: 5

  # MinIO 物件儲存
  minio:
    image: minio/minio:latest
    container_name: tutor-minio
    ports:
      - "9000:9000"
      - "9001:9001"
    environment:
      MINIO_ROOT_USER: tutor
      MINIO_ROOT_PASSWORD: tutor123
    volumes:
      - ./data/minio:/data
    command: server /data --console-address ":9001"
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 30s
      timeout: 20s
      retries: 3

  # MailHog 郵件測試服務
  mailhog:
    image: mailhog/mailhog:latest
    container_name: tutor-mailhog
    ports:
      - "1025:1025"
      - "8025:8025"
    restart: unless-stopped

  # NestJS API 服務
  api:
    build:
      context: .
      dockerfile: docker/api.Dockerfile
    container_name: tutor-api
    ports:
      - "3001:3001"
    environment:
      NODE_ENV: development
      DATABASE_URL: postgresql://tutor:tutor123@db:5432/tutordb
      JWT_SECRET: your-super-secret-jwt-key-change-in-production
      JWT_EXPIRES_IN: 1h
      JWT_REFRESH_EXPIRES_IN: 7d
      MINIO_ENDPOINT: minio
      MINIO_PORT: 9000
      MINIO_ACCESS_KEY: tutor
      MINIO_SECRET_KEY: tutor123
      MINIO_USE_SSL: false
      MINIO_BUCKET_PRIVATE: private
      MINIO_BUCKET_PUBLIC: public
      SMTP_HOST: mailhog
      SMTP_PORT: 1025
      SMTP_USER: ""
      SMTP_PASS: ""
      SMTP_FROM: noreply@tutorplatform.com
      CORS_ORIGIN: "*"
      PORT: 3001
    volumes:
      - ./apps/api:/app
      - api_node_modules:/app/node_modules
    depends_on:
      db:
        condition: service_healthy
      minio:
        condition: service_healthy
    restart: unless-stopped
    command: sh -c "npm install && npm run start:dev"

volumes:
  postgres_data:
  minio_data:
  api_node_modules:

networks:
  default:
    name: tutor-network
